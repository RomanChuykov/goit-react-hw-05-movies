{"version":3,"file":"static/js/843.c9ed19e1.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js","services/fetchMovies.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  margin-bottom: 40px;\n  justify-content: space-between;\n  `;\n  \nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color:  #ebf5fc;\n \n  `;\n \nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: #6a9bd8;\n  }\n`;\n\n\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n \n  MovieName,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, original_name, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            \n            <MovieName>{title ?? original_name}</MovieName>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 13px 20px;\n  width: 300px;\n  border-radius: 4px;\n\n  font-size: 18px;\n  color: #858585;\n\n \n  border: 1px solid;\n\n  :focus {\n    outline: 3px solid #ebf5fc;\n    box-shadow: 0px 0px 0px 6px #6a9bd8;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n\n  font-weight: 700;\n  font-size: 22px;\n\n  border-radius: 4px;\n\n  border: none;\n  color: #6a9bd8;\n  background-color: #ebf5fc;\n \n\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n\n  :hover,\n  :focus-visible {\n    color: #ebf5fc;\n    background-color: #6a9bd8;\n  }\n\n  :focus {\n    outline: 3px solid #ebf5fc;\n    box-shadow: 0px 0px 0px 6px #6a9bd8;\n  }\n`;\n","import { Form, Input, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ onChange, onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" onChange={onChange} />\n\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { getMovieByName } from 'services/fetchMovies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n    getMovieByName(query).then(setMovies);\n  }, [searchParams]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchBox onSubmit={handleSubmit} onChange={handleChange} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '20e13b9a04a0b41c58cfa9dd598a635c',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(`/search/movie?${searchParams}&query=${name}`);\n  return data.results;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MovieName","_templateObject4","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","original_name","poster_path","to","concat","state","from","Form","Input","Button","SearchBox","onChange","onSubmit","_jsxs","type","Movies","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","get","getMovieByName","then","_Fragment","e","preventDefault","target","value","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMovieDetails","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","name","_yield$axios$get3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}