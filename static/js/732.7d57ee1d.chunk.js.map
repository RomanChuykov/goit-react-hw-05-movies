{"version":3,"file":"static/js/732.7d57ee1d.chunk.js","mappings":"4OAAaA,EAAY,WACvB,OAAOC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,kDACZ,E,kBCAaC,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAQhBC,GAFOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QAEPF,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2EAMjBI,EAAON,EAAAA,GAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uECVfM,EAAU,WACrB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAChC,GAAG,CAACC,IAICF,EAIL,OACEO,EAAAA,EAAAA,MAACrB,EAAI,CAAAD,SAAA,CACiB,IAAnBe,EAAQQ,SAAgBxB,EAAAA,EAAAA,KAACD,EAAS,IAElCiB,EAAQS,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAM,OACjCN,EAAAA,EAAAA,MAAA,MAAAtB,SAAA,EACED,EAAAA,EAAAA,KAACM,EAAM,CAAAL,SAAE4B,KACT7B,EAAAA,EAAAA,KAACS,EAAI,CAAAR,SAAE2B,MAFAD,EAGJ,MAIb,C","sources":["Error/NoReviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["export const NoReviews = () => {\n  return <p>Sorry, we don't have any reviews on this movie</p>;\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  font-size: 22px;\n  color:  #6a9bd8\n  `;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  color: #858585;\n  line-height: 1.68;\n`;\n","import { getMovieReviews } from 'services/fetchMovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NoReviews } from 'Error/NoReviews';\nimport { List, Author, Text } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  // console.log(reviews);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <List>\n      {reviews.length === 0 && <NoReviews />}\n\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <Author>{author}</Author>\n          <Text>{content}</Text>\n        </li>\n      ))}\n    </List>\n  );\n};\n"],"names":["NoReviews","_jsx","children","List","styled","_templateObject","_taggedTemplateLiteral","Author","_templateObject2","_templateObject3","Text","_templateObject4","Reviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","_jsxs","length","map","_ref","id","content","author"],"sourceRoot":""}